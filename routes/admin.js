const express = require('express');
const router = express.Router();
const mysql = require('mysql2/promise'); // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô promise-based
const bodyParser = require('body-parser');
const bcrypt = require('bcrypt');
const cookieParser = require('cookie-parser');
const multer = require('multer');
const { isAdmin } = require('../middleware/auth');
require('dotenv').config();

// ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
const pool = mysql.createPool({
    user: process.env.DB_USER,
    host: process.env.DB_HOST,
    database: process.env.DB_NAME,
    password: process.env.DB_PASS,
    port: 3307,
});

router.use(cookieParser());
router.use(bodyParser.urlencoded({ extended: true }));
router.use(bodyParser.json());


router.get('/login', (req, res) => {
    const username = req.cookies.username;
    const role = req.cookies.role;
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏°‡∏µ‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß
    if (username && role === 'admin') {
        return res.redirect('/admin/articles'); // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô admin ‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ articles
    } else {
        return res.render('admin/login');
    }
});

// üîπ ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏•‡πá‡∏≠‡∏Ñ‡∏≠‡∏¥‡∏ô
router.post('/verify', async (req, res) => {
    const { username, password } = req.body;
    try {
        const [results] = await pool.query("SELECT * FROM admin WHERE username = ? AND password = ?", [username, password]);

        if (results.length === 0) {
            return res.render('admin/login', { msg: 'Wrong Username or Password' });
        }

        res.cookie('username', username, { maxAge: 900000 });
        res.cookie('role', 'admin', { maxAge: 900000 }); // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î role ‡πÄ‡∏õ‡πá‡∏ô admin
        res.redirect('/admin/dashboard');

    } catch (err) {
        console.log(err);
        res.render('admin/login', { msg: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö' });
    }
});

// üîπ ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î
router.get('/dashboard', isAdmin, (req, res) => {
    res.render('admin/dashboard', { username: req.cookies.username });
});

// üîπ ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
router.get('/logout', (req, res) => {
    res.clearCookie('username');
    res.clearCookie('role');
    res.redirect('/admin/login');
});

// üîπ ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤ Dashboard ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
router.get('/dashboard', isAdmin, async (req, res) => {
    try {
        // üîπ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏â‡∏û‡∏≤‡∏∞ `username` ‡∏à‡∏≤‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á users
        const [users] = await pool.query("SELECT username FROM users");

        console.log("Users Data:", users); // Debug ‡πÄ‡∏ä‡πá‡∏Å‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•

        res.render('admin/dashboard', { users }); // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á dashboard.ejs
    } catch (err) {
        console.log("Database Error:", err);
        res.status(500).send('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î');
    }
});


// üîπ ‡∏•‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
router.get('/dashboard/delete/:id', isAdmin, async (req, res) => {
    try {
        await pool.query("DELETE FROM users WHERE id = ?", [req.params.id]);
        res.redirect('/admin/dashboard'); // ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏•‡∏ö
    } catch (err) {
        console.log(err);
        res.status(500).send('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î');
    }
});

//üîπ ‡∏î‡∏π‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (Protected ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Admin)
router.get('/articles', isAdmin, async (req, res) => {
    try {
        const [articles] = await pool.query("SELECT * FROM articles");
        res.render('admin/articles', { articles });
    } catch (err) {
        console.log(err);
        res.status(500).send('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î');
    }
});

// üîπ ‡∏î‡∏π‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ö‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞ ID
router.get('/articles', isAdmin, async (req, res) => {
    
});
// router.get('/articles', isAdmin, (req, res) => {
//     res.render('admin/articles'); // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ view ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°
// });

// üîπ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå
const storage = multer.diskStorage({
    destination: (req, file, cb) => cb(null, 'public/uploads/'),
    filename: (req, file, cb) => cb(null, Date.now() + '-' + file.originalname)
});

const fileFilter = (req, file, cb) => {
    if (file.mimetype === 'image/png' || file.mimetype === 'image/jpeg') {
        cb(null, true);
    } else {
        cb(new Error('Only PNG and JPG are allowed'), false);
    }
};

const upload = multer({ storage, fileFilter });


// üîπ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà
router.get('/admin/articles/add', isAdmin, (req, res) => {
    res.render('admin/add'); // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ view ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°
});
router.post('/articles/add', isAdmin, upload.single('image'), async (req, res) => {
    const { title, content } = req.body;
    const image = req.file ? req.file.filename : null; // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡∏†‡∏≤‡∏û‡∏Å‡πá‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå

    try {
        await pool.query("INSERT INTO articles (title, content, image) VALUES (?, ?, ?)", [title, content, image]);
        res.redirect('/admin/articles'); // ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÉ‡∏´‡πâ‡∏£‡∏µ‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ï‡πå‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ articles
    } catch (err) {
        console.log(err);
        res.status(500).send('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î');
    }
});

// üîπ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°
router.post('/articles/edit/:id', isAdmin, upload.single('image'), async (req, res) => {
    const { title, content } = req.body;
    const image = req.file ? req.file.filename : req.body.oldImage;

    try {
        await pool.query("UPDATE articles SET title = ?, content = ?, image = ? WHERE id = ?", [title, content, image, req.params.id]);
        res.redirect('/admin/articles');
    } catch (err) {
        console.log(err);
        res.status(500).send('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î');
    }
});

// üîπ ‡∏•‡∏ö‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°
router.get('/articles/delete/:id', isAdmin, async (req, res) => {
    try {
        await pool.query("DELETE FROM articles WHERE id = ?", [req.params.id]);
        res.redirect('/admin/articles');
    } catch (err) {
        console.log(err);
        res.status(500).send('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î');
    }
});

module.exports = router;
